# Copyright (c) 2019 Renata Hodovan, Akos Kiss.
#
# Licensed under the BSD 3-Clause License
# <LICENSE-BSD-3-Clause.rst or https://opensource.org/licenses/BSD-3-Clause>.
# This file may not be copied, modified, or distributed except according to
# those terms.

############
# Escargot #
############

[sut.escargot]
# Call job settings.
call=fuzzinator.call.SubprocessCall
call.decorate(2)=fuzzinator.call.ExitCodeFilter
call.decorate(3)=fuzzinator.call.GdbBacktraceDecorator
call.decorate(4)=fuzzinator.call.RegexFilter
call.decorate(5)=fuzzinator.call.UniqueIdDecorator
call.decorate(6)=fuzzinator.call.PlatformInfoDecorator
call.decorate(7)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(8)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(9)=fuzzinator.call.AnonymizeDecorator
# Reduce/validate job settings.
reduce=fuzzinator.reduce.Picireny
reduce_call=${call}
reduce_call.decorate(2)=${call.decorate(2)}
reduce_call.decorate(3)=${call.decorate(3)}
reduce_call.decorate(4)=${call.decorate(4)}
reduce_call.decorate(5)=${call.decorate(5)}
reduce_call.decorate(6)=${call.decorate(6)}
reduce_call.decorate(7)=${call.decorate(7)}
reduce_call.decorate(8)=${call.decorate(8)}
reduce_call.decorate(9)=${call.decorate(9)}
# Reduce/validate job needs a FileWriterDecorator since test cases are stored as content.
reduce_call.decorate(10)=fuzzinator.call.FileWriterDecorator
# Update job settings.
update_condition=fuzzinator.update.TimestampUpdateCondition
update=fuzzinator.update.SubprocessUpdate
validate_after_update=${escargot:validate_after_update}
# Define issue tracker.
tracker=fuzzinator.tracker.GithubTracker
# Define issue formatters.
formatter=fuzzinator.formatter.JinjaFormatter
formatter.decorate(0)=fuzzinator.formatter.DecoderDecorator
wui_formatter=fuzzinator.formatter.JinjaFormatter
wui_formatter.decorate(0)=fuzzinator.formatter.DecoderDecorator
wui_formatter.decorate(1)=fuzzinator.formatter.MarkdownDecorator

[sut.escargot.call]
cwd=${escargot:root_dir}
command=${escargot:root_dir}/${escargot:binary} {test}
timeout=${escargot:timeout}

# ExitCodeFilter
# http://man7.org/linux/man-pages/man7/signal.7.html
[sut.escargot.call.decorate(2)]
exit_codes=[-11, -8, -6, -4, 132, 134, 136, 139]

# GdbBacktraceDecorator
[sut.escargot.call.decorate(3)]
cwd=${sut.escargot.call:cwd}
command=${sut.escargot.call:command}

# RegexFilter
# glibc assert: https://sourceware.org/git/?p=glibc.git;a=blob;f=assert/assert.c
# ASAN patterns: https://github.com/google/sanitizers/wiki/AddressSanitizer
[sut.escargot.call.decorate(4)]
stderr=["AddressSanitizer: (?P<type>SEGV|stack-overflow|heap-use-after-free|dynamic-stack-buffer-overflow|heap-buffer-overflow|stack-buffer-overflow|global-buffer-overflow|stack-use-after-return|initialization-order-fiasco|use-after-poison|use-of-uninitialized-value|stack-use-after-scope|attempting double-free) on (unknown )?address (?P<address>0x[0-9a-f]+) (.*?\n)[ ]*#[0-9]+ 0x[0-9A-Fa-f]+( in)? (?P<path>(?:(?!malloc|WTFCrash|__libc_start_main)[^ ()])+)",
        "[/](?P<file>[^/:]+):(?P<line>[0-9]+): (?P<path>.+): (?P<type>Assertion) [`](?P<condition>[^']+)['] failed",
        "(?P<type>RELEASE_ASSERT_NOT_REACHED) at (?P<path>[^ ]+) [(](?P<line>[0-9]+)[)]",
        "(?P<type>RELEASE_ASSERT) at (?P<path>[^ ]+) [(](?P<line>[0-9]+)[)]"]
backtrace=["#[0-9]+[ ]+0x[0-9a-f]+ in (?P<path>(?!__GI_abort|__assert_fail_base|__GI___assert_fail|[?][?])[^ ]+) .*? at (?P<file>[^:]+):(?P<line>[0-9]+)"]

# UniqueIdDecorator
[sut.escargot.call.decorate(5)]
properties=["type", "condition", "path"]

# SubprocessPropertyDecorator
[sut.escargot.call.decorate(7)]
property=version
cwd=${sut.escargot.call:cwd}
command=git rev-parse --short HEAD

# SubprocessPropertyDecorator
[sut.escargot.call.decorate(8)]
property=build_command
command=echo "${escargot:build}"

# AnonymizeDecorator
[sut.escargot.call.decorate(9)]
properties=["stderr", "stdout", "backtrace"]
old_text=${sut.escargot.call:cwd}
new_text=escargot/


### REDUCE/VALIDATE ###

[sut.escargot.reduce]
hddmin=${escargot.picireny:hddmin}
parallel=${escargot.picireny:parallel}
combine_loops=${escargot.picireny:combine_loops}
split_method=${escargot.picireny:split_method}
subset_first=${escargot.picireny:subset_first}
subset_iterator=${escargot.picireny:subset_iterator}
complement_iterator=${escargot.picireny:complement_iterator}
jobs=${escargot.picireny:jobs}
max_utilization=${escargot.picireny:max_utilization}
encoding=${escargot.picireny:encoding}
antlr=${escargot.picireny:antlr}
format=${escargot.picireny:format}
grammar=${escargot.picireny:grammar}
start=${escargot.picireny:start}
replacements=${escargot.picireny:replacements}
lang=${escargot.picireny:lang}
hdd_star=${escargot.picireny:hdd_star}
flatten_recursion=${escargot.picireny:flatten_recursion}
squeeze_tree=${escargot.picireny:squeeze_tree}
skip_unremovable=${escargot.picireny:skip_unremovable}
skip_whitespace=${escargot.picireny:skip_whitespace}
build_hidden_tokens=${escargot.picireny:build_hidden_tokens}
granularity=${escargot.picireny:granularity}
cache_class=${escargot.picireny:cache_class}
cleanup=${escargot.picireny:cleanup}

[sut.escargot.reduce_call]
cwd=${sut.escargot.call:cwd}
command=${sut.escargot.call:command}
timeout=${sut.escargot.call:timeout}

# ExitCodeFilter
[sut.escargot.reduce_call.decorate(2)]
exit_codes=${sut.escargot.call.decorate(2):exit_codes}

# GdbBacktraceDecorator
[sut.escargot.reduce_call.decorate(3)]
cwd=${sut.escargot.call.decorate(3):cwd}
command=${sut.escargot.call.decorate(3):command}

# RegexFilter
[sut.escargot.reduce_call.decorate(4)]
stderr=${sut.escargot.call.decorate(4):stderr}
backtrace=${sut.escargot.call.decorate(4):backtrace}

# UniqueIdDecorator
[sut.escargot.reduce_call.decorate(5)]
properties=${sut.escargot.call.decorate(5):properties}

# SubprocessPropertyDecorator
[sut.escargot.reduce_call.decorate(7)]
property=${sut.escargot.call.decorate(7):property}
cwd=${sut.escargot.call.decorate(7):cwd}
command=${sut.escargot.call.decorate(7):command}

# SubprocessPropertyDecorator
[sut.escargot.reduce_call.decorate(8)]
property=${sut.escargot.call.decorate(8):property}
command=${sut.escargot.call.decorate(8):command}

# AnonymizeDecorator
[sut.escargot.reduce_call.decorate(9)]
properties=${sut.escargot.call.decorate(9):properties}
old_text=${sut.escargot.call.decorate(9):old_text}
new_text=${sut.escargot.call.decorate(9):new_text}

# FileWriterDecorator
[sut.escargot.reduce_call.decorate(10)]
filename=${fuzzinator:work_dir}/escargot/reduce/{uid}.js


### UPDATE ###

[sut.escargot.update_condition]
age=${escargot:age}
path=${escargot:root_dir}/${escargot:binary}

[sut.escargot.update]
cwd=${sut.escargot.call:cwd}
command=${fuzzinator.custom:config_root}/escargot/escargot-update.sh "${escargot:build}"
env=${escargot:build_env}


### REPORT ###

[sut.escargot.tracker.init]
repository=pando-project/escargot


### FORMATTER ###

[sut.escargot.formatter.init]
short={{type}} {{condition}} in {{path}}
long_file=${fuzzinator.custom:config_root}/escargot/escargot-report.md

[sut.escargot.wui_formatter.init]
short=${sut.escargot.formatter.init:short}
long_file=${sut.escargot.formatter.init:long_file}

[sut.escargot.wui_formatter.decorate(1)]
extensions=["extra", "codehilite", "fenced_code"]
