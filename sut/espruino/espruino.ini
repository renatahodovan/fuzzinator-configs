# Copyright (c) 2019-2021 Renata Hodovan, Akos Kiss.
#
# Licensed under the BSD 3-Clause License
# <LICENSE-BSD-3-Clause.rst or https://opensource.org/licenses/BSD-3-Clause>.
# This file may not be copied, modified, or distributed except according to
# those terms.

####################
#     Espruino     #
####################

[sut.espruino]
# Call job settings.
call=fuzzinator.call.SubprocessCall
call.decorate(1)=fuzzinator.call.ExitCodeFilter
call.decorate(2)=fuzzinator.call.GdbBacktraceDecorator
call.decorate(3)=fuzzinator.call.SanitizerAutomatonFilter
call.decorate(4)=fuzzinator.call.SanitizerAnalyzerDecorator
call.decorate(5)=fuzzinator.call.UniqueIdDecorator
call.decorate(6)=fuzzinator.call.PlatformInfoDecorator
call.decorate(7)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(8)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(9)=fuzzinator.call.AnonymizeDecorator
# Reduce/validate job settings.
reduce=fuzzinator.reduce.Picireny
reduce_call=${call}
reduce_call.decorate(1)=${call.decorate(1)}
reduce_call.decorate(2)=${call.decorate(2)}
reduce_call.decorate(3)=${call.decorate(3)}
reduce_call.decorate(4)=${call.decorate(4)}
reduce_call.decorate(5)=${call.decorate(5)}
reduce_call.decorate(6)=${call.decorate(6)}
reduce_call.decorate(7)=${call.decorate(7)}
reduce_call.decorate(8)=${call.decorate(8)}
reduce_call.decorate(9)=${call.decorate(9)}
# Reduce/validate job needs a FileWriterDecorator since test cases are stored as content.
reduce_call.decorate(10)=fuzzinator.call.FileWriterDecorator
# Update job settings.
update_condition=fuzzinator.update.TimestampUpdateCondition
update=fuzzinator.update.SubprocessUpdate
validate_after_update=${espruino:validate_after_update}
# Define issue tracker.
tracker=fuzzinator.tracker.GithubTracker
# Define issue formatters.
formatter=fuzzinator.formatter.StringFormatter
formatter.decorate(0)=fuzzinator.formatter.DecoderDecorator
wui_formatter=fuzzinator.formatter.JinjaFormatter
wui_formatter.decorate(0)=fuzzinator.formatter.DecoderDecorator
wui_formatter.decorate(1)=fuzzinator.formatter.MarkdownDecorator
# Define custom issue exporter.
exporter=fuzzinator.exporter.TestExporter

[sut.espruino.call]
cwd=${espruino:root_dir}
command=./${espruino:binary} {test}
timeout=${espruino:timeout}
env={"ASAN_OPTIONS": "handle_abort=1:symbolize=true:allow_addr2line=true:abort_on_error=true:detect_stack_use_after_return=1:check_initialization_order=true:strict_init_order=true:exitcode=199"}

# ExitCodeFilter
# http://man7.org/linux/man-pages/man7/signal.7.html
[sut.espruino.call.decorate(1)]
exit_codes=[-11, -8, -6, -4, 132, 134, 136, 139, 199]

# GdbBacktraceDecorator
[sut.espruino.call.decorate(2)]
cwd=${sut.espruino.call:cwd}
command=${sut.espruino.call:command}

# SanitizerAutomatonFilter
# Espruino assert: https://github.com/espruino/Espruino/blob/master/src/jsutils.c#L354
# glibc assert: https://sourceware.org/git/?p=glibc.git;a=blob;f=assert/assert.c
[sut.espruino.call.decorate(3)]
stderr=["mns /__GI_\\w|__kernel_vsyscall|syscall_2/",
        "mas /(?P<error_type>ASSERT FAILED) AT (?P<file>[^:]+):(?P<line>\\d+)/",
        "mas /(?P<error_type>ASSERT)[(](?P<condition>.+)[)] FAILED AT (?P<file>[^:]+):(?P<line>\\d+)/",
        "mas /(?P<condition>buffer overflow detected)/",
        "mas /#\\d+ 0x[\\da-fA-F]+ in (?P<function>([^()])+) [^/]*(?P<file>[/][^:]+):(?P<line>\\d+)/"]
backtrace=["mns /__GI_\\w|__kernel_vsyscall|syscall_2/",
           "mas /#\\d+[ ]+0x[\\da-fA-F]+ in (?P<function>[^ ]+) .*? at (?P<file>[^:]+):(?P<line>\\d+)/"]

# UniqueIdDecorator
[sut.espruino.call.decorate(5)]
properties=["error_type", "condition", "function"]

# SubprocessPropertyDecorator
[sut.espruino.call.decorate(7)]
property=version
cwd=${sut.espruino.call:cwd}
command=git rev-parse --short HEAD

# SubprocessPropertyDecorator
[sut.espruino.call.decorate(8)]
property=build_command
command=echo ${espruino:build}

# AnonymizeDecorator
[sut.espruino.call.decorate(9)]
properties=["stderr", "stdout", "backtrace"]
old_text=${sut.espruino.call:cwd}
new_text=espruino/


### REDUCE/VALIDATE ###

[sut.espruino.reduce]
hddmin=${espruino.picireny:hddmin}
parallel=${espruino.picireny:parallel}
combine_loops=${espruino.picireny:combine_loops}
split_method=${espruino.picireny:split_method}
subset_first=${espruino.picireny:subset_first}
subset_iterator=${espruino.picireny:subset_iterator}
complement_iterator=${espruino.picireny:complement_iterator}
jobs=${espruino.picireny:jobs}
max_utilization=${espruino.picireny:max_utilization}
encoding=${espruino.picireny:encoding}
antlr=${espruino.picireny:antlr}
format=${espruino.picireny:format}
grammar=${espruino.picireny:grammar}
start=${espruino.picireny:start}
replacements=${espruino.picireny:replacements}
lang=${espruino.picireny:lang}
hdd_star=${espruino.picireny:hdd_star}
flatten_recursion=${espruino.picireny:flatten_recursion}
squeeze_tree=${espruino.picireny:squeeze_tree}
skip_unremovable=${espruino.picireny:skip_unremovable}
skip_whitespace=${espruino.picireny:skip_whitespace}
build_hidden_tokens=${espruino.picireny:build_hidden_tokens}
granularity=${espruino.picireny:granularity}
cache_class=${espruino.picireny:cache_class}
cleanup=${espruino.picireny:cleanup}

[sut.espruino.reduce_call]
cwd=${sut.espruino.call:cwd}
command=${sut.espruino.call:command}
timeout=${sut.espruino.call:timeout}

# ExitCodeFilter
[sut.espruino.reduce_call.decorate(1)]
exit_codes=${sut.espruino.call.decorate(1):exit_codes}

# GdbBacktraceDecorator
[sut.espruino.reduce_call.decorate(2)]
cwd=${sut.espruino.call.decorate(2):cwd}
command=${sut.espruino.call.decorate(2):command}

# SanitizerAutomatonFilter
[sut.espruino.reduce_call.decorate(3)]
stderr=${sut.espruino.call.decorate(3):stderr}
backtrace=${sut.espruino.call.decorate(3):backtrace}

# UniqueIdDecorator
[sut.espruino.reduce_call.decorate(5)]
properties=${sut.espruino.call.decorate(5):properties}

# SubprocessPropertyDecorator
[sut.espruino.reduce_call.decorate(7)]
property=${sut.espruino.call.decorate(7):property}
cwd=${sut.espruino.call.decorate(7):cwd}
command=${sut.espruino.call.decorate(7):command}

# SubprocessPropertyDecorator
[sut.espruino.reduce_call.decorate(8)]
property=${sut.espruino.call.decorate(8):property}
command=${sut.espruino.call.decorate(8):command}

# AnonymizeDecorator
[sut.espruino.reduce_call.decorate(9)]
properties=${sut.espruino.call.decorate(9):properties}
old_text=${sut.espruino.call.decorate(9):old_text}
new_text=${sut.espruino.call.decorate(9):new_text}

# FileWriterDecorator
[sut.espruino.reduce_call.decorate(10)]
filename=${fuzzinator:work_dir}/espruino/reduce/{uid}.js


### UPDATE ###

[sut.espruino.update_condition]
age=${espruino:age}
path=${espruino:root_dir}/${espruino:binary}

[sut.espruino.update]
cwd=${sut.espruino.call:cwd}
command=${fuzzinator.custom:config_root}/sut/espruino/espruino-update.sh "${espruino:build}"
env=${espruino:build_env}


### REPORT ###

[sut.espruino.tracker]
repository=espruino/Espruino
token=${espruino:token}


### FORMATTER ###

[sut.espruino.formatter]
short={{type}} {{condition}} in {{function}}
long_file=${fuzzinator.custom:config_root}/sut/espruino/espruino-report.md

[sut.espruino.wui_formatter]
short=${sut.espruino.formatter:short}
long_file=${sut.espruino.formatter:long_file}

[sut.espruino.wui_formatter.decorate(1)]
extensions=["extra", "codehilite", "fenced_code"]


### EXPORTER ###

[sut.espruino.exporter]
extension=.js
type=text/javascript
