# Copyright (c) 2019-2020 Renata Hodovan, Akos Kiss.
#
# Licensed under the BSD 3-Clause License
# <LICENSE-BSD-3-Clause.rst or https://opensource.org/licenses/BSD-3-Clause>.
# This file may not be copied, modified, or distributed except according to
# those terms.

#############
#    JSC    #
#############

[sut.jsc]
# Call job settings.
call=fuzzinator.call.SubprocessCall
call.decorate(1)=fuzzinator.call.ExitCodeFilter
call.decorate(2)=fuzzinator.call.GdbBacktraceDecorator
call.decorate(3)=fuzzinator.call.SanitizerAutomatonFilter
call.decorate(4)=fuzzinator.call.SanitizerAnalyzerDecorator
call.decorate(5)=fuzzinator.call.UniqueIdDecorator
call.decorate(6)=fuzzinator.call.PlatformInfoDecorator
call.decorate(7)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(8)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(9)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(10)=fuzzinator.call.AnonymizeDecorator
# Reduce job settings.
reduce=fuzzinator.reduce.Picireny
reduce_call=${call}
reduce_call.decorate(1)=${call.decorate(1)}
reduce_call.decorate(2)=${call.decorate(2)}
reduce_call.decorate(3)=${call.decorate(3)}
reduce_call.decorate(4)=${call.decorate(4)}
reduce_call.decorate(5)=${call.decorate(5)}
reduce_call.decorate(6)=${call.decorate(6)}
reduce_call.decorate(7)=${call.decorate(7)}
reduce_call.decorate(8)=${call.decorate(8)}
reduce_call.decorate(9)=${call.decorate(9)}
reduce_call.decorate(10)=${call.decorate(10)}
# Reduce job needs a FileWriterDecorator since test cases are stored as content.
reduce_call.decorate(11)=fuzzinator.call.FileWriterDecorator
reduce_cost=${sut.jsc.reduce:jobs}
# Update job settings.
update_condition=fuzzinator.update.TimestampUpdateCondition
update=fuzzinator.update.SubprocessUpdate
# Define issue tracker.
tracker=fuzzinator.tracker.BugzillaTracker
# Define issue formatters.
formatter=fuzzinator.formatter.JinjaFormatter
formatter.decorate(0)=fuzzinator.formatter.DecoderDecorator
wui_formatter=fuzzinator.formatter.JinjaFormatter
wui_formatter.decorate(0)=fuzzinator.formatter.DecoderDecorator
wui_formatter.decorate(1)=fuzzinator.formatter.MarkdownDecorator
# Define custom issue exporter.
exporter=fuzzinator.exporter.TestExporter

[sut.jsc.call]
cwd=${jsc:root_dir}
command=./${jsc:binary} {test}
timeout=${jsc:timeout}
env={"ASAN_OPTIONS": "handle_abort=1:symbolize=true:allow_addr2line=true:abort_on_error=true:detect_stack_use_after_return=1:check_initialization_order=true:strict_init_order=true:exitcode=199"}

# ExitCodeFilter
# http://man7.org/linux/man-pages/man7/signal.7.html
[sut.jsc.call.decorate(1)]
exit_codes=[-11, -8, -6, -4, 132, 134, 136, 139, 199]

# GdbBacktraceDecorator
[sut.jsc.call.decorate(2)]
cwd=${sut.jsc.call:cwd}
command=${sut.jsc.call:command}

# SanitizerAutomatonFilter
[sut.jsc.call.decorate(3)]
stderr=["mns /WTFCrash|__kernel_vsyscall|syscall_2|gsignal|<unknown>|__gnu_debug|__GI_\\w/",
        "mss /(?P<error_type>SHOULD NEVER BE REACHED)/",
        "mss /(?P<error_type>ASSERTION FAILED):\\s(?P<condition>.+)\\.?$$/",
        "mss /(?P<error_type>ARGUMENT BAD): (?P<condition>.+)/",
        "mas /^(?P<file>[^#(]+)\\((?P<line>\\d+)\\)\\s+:\\s+(?P<function>.+)/",
        "mas /^\\d+\\s+0x[\\da-fA-F]+ (?P<function>.+)/"]
backtrace=["mns /WTFCrash|__kernel_vsyscall|syscall_2|gsignal|<unknown>|__gnu_debug|__GI_\\w/",
           "mat /#(?P<frame_id>\\d+)\\s+(?:(?P<address>0x[\\da-fA-F]*) in |)(?P<function>.+?)(?:\\s*(?P<function_args>\\((?:\\s*\\S+=(?:\\S+|<optimized out>),?)+\\)))?(?: (?:at|from) (?:(?P<file>[^:]+):(?P<line>\\d+)|(?P<module>.+))|$$)/"]

# UniqueIdDecorator
[sut.jsc.call.decorate(5)]
properties=["error_type", "condition", "function"]

# SubprocessPropertyDecorator
[sut.jsc.call.decorate(7)]
property=version
cwd=${sut.jsc.call:cwd}
command=git svn find-rev HEAD

# SubprocessPropertyDecorator
[sut.jsc.call.decorate(8)]
property=build_name
command=echo "${jsc:build_name}"

# SubprocessPropertyDecorator
[sut.jsc.call.decorate(9)]
property=build_command
command=echo "${jsc:build}"

# AnonymizeDecorator
[sut.jsc.call.decorate(10)]
properties=["stderr", "stdout", "backtrace"]
old_text=${sut.jsc.call:cwd}
new_text=WebKit/


### REDUCE/VALIDATE ###

[sut.jsc.reduce]
hddmin=${jsc.picireny:hddmin}
parallel=${jsc.picireny:parallel}
combine_loops=${jsc.picireny:combine_loops}
split_method=${jsc.picireny:split_method}
subset_first=${jsc.picireny:subset_first}
subset_iterator=${jsc.picireny:subset_iterator}
complement_iterator=${jsc.picireny:complement_iterator}
jobs=${jsc.picireny:jobs}
max_utilization=${jsc.picireny:max_utilization}
encoding=${jsc.picireny:encoding}
antlr=${jsc.picireny:antlr}
format=${jsc.picireny:format}
grammar=${jsc.picireny:grammar}
start=${jsc.picireny:start}
replacements=${jsc.picireny:replacements}
lang=${jsc.picireny:lang}
hdd_star=${jsc.picireny:hdd_star}
flatten_recursion=${jsc.picireny:flatten_recursion}
squeeze_tree=${jsc.picireny:squeeze_tree}
skip_unremovable=${jsc.picireny:skip_unremovable}
skip_whitespace=${jsc.picireny:skip_whitespace}
build_hidden_tokens=${jsc.picireny:build_hidden_tokens}
granularity=${jsc.picireny:granularity}
cache_class=${jsc.picireny:cache_class}
cleanup=${jsc.picireny:cleanup}

[sut.jsc.reduce_call]
cwd=${sut.jsc.call:cwd}
command=${sut.jsc.call:command}
timeout=${sut.jsc.call:timeout}

# ExitCodeFilter
[sut.jsc.reduce_call.decorate(1)]
exit_codes=${sut.jsc.call.decorate(1):exit_codes}

# GdbBacktraceDecorator
[sut.jsc.reduce_call.decorate(2)]
cwd=${sut.jsc.call.decorate(2):cwd}
command=${sut.jsc.call.decorate(2):command}

# SanitizerAutomatonFilter
[sut.jsc.reduce_call.decorate(4)]
stderr=${sut.jsc.call.decorate(4):stderr}
backtrace=${sut.jsc.call.decorate(4):backtrace}

# UniqueIdDecorator
[sut.jsc.reduce_call.decorate(5)]
properties=${sut.jsc.call.decorate(5):properties}

# SubprocessPropertyDecorator
[sut.jsc.reduce_call.decorate(7)]
property=${sut.jsc.call.decorate(7):property}
cwd=${sut.jsc.call.decorate(7):cwd}
command=${sut.jsc.call.decorate(7):command}

# SubprocessPropertyDecorator
[sut.jsc.reduce_call.decorate(8)]
property=${sut.jsc.call.decorate(8):property}
command=${sut.jsc.call.decorate(8):command}

# SubprocessPropertyDecorator
[sut.jsc.reduce_call.decorate(9)]
property=${sut.jsc.call.decorate(9):property}
command=${sut.jsc.call.decorate(9):command}

# AnonymizeDecorator
[sut.jsc.reduce_call.decorate(10)]
properties=${sut.jsc.call.decorate(10):properties}
old_text=${sut.jsc.call.decorate(10):old_text}
new_text=${sut.jsc.call.decorate(10):new_text}

# FileWriterDecorator
[sut.jsc.reduce_call.decorate(11)]
filename=${fuzzinator:work_dir}/jsc/picireny/{uid}.js


### UPDATE ###

[sut.jsc.update_condition]
age=${jsc:age}
path=${jsc:root_dir}/${jsc:binary}

[sut.jsc.update]
cwd=${sut.jsc.call:cwd}
command=${fuzzinator.custom:config_root}/sut/jsc/jsc-update.sh "${jsc:build}"
env=${jsc:build_env}


### REPORT ###

[sut.jsc.tracker.init]
product=WebKit
url=https://bugs.webkit.org
api_key=${jsc:api_key}


### FORMATTER ###

[sut.jsc.formatter.init]
short={{error_type}} {{condition}} in {{function}}
long_file=${fuzzinator.custom:config_root}/sut/jsc/jsc-report.txt

[sut.jsc.wui_formatter.init]
short=${sut.jsc.formatter.init:short}
long_file=${sut.jsc.formatter.init:long_file}

[sut.jsc.wui_formatter.decorate(1)]
extensions=["extra", "codehilite", "fenced_code"]


### EXPORTER ###

[sut.jsc.exporter.init]
extension=.js
type=text/javascript
